//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Digital circuit analyzer
//  @ File Name : Scheduler.h
//  @ Date : 20.4.2013
//  @ Author : Lazar Kovacevic
//
//


#if !defined(_SCHEDULER_H)
#define _SCHEDULER_H
#include "../model/typedefs.h"
#include "Event.h"
#include <cmath>

class Event;

// event scheduler. Elements feed scheduler with events which it schedules. Also keeps track of time in system.
class Scheduler
{
public:

	static Scheduler* Instance();		// singleton

	void put(Event*);		// add event and link it in list

	Time getCurTime();

	bool processNow();		//p start processing of events

protected:

	Scheduler();		

	//helper. Process one event
	bool processOneEvent();				

	// helper. Check if 2 neighbour events form a glitch. If so, remove them from chain of events. TODO: is this the right place?
	bool checkGlitch(Event*, Event*);		

private:

	Time curTime;

	Event* first;	// first event to be processed

};

#endif  //_SCHEDULER_H
