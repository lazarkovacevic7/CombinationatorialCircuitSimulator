//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Digital Circuit Analyzer
//  @ File Name : DigitalGate.h
//  @ Date : 7.4.2013
//  @ Author : Lazar Kovacevic
//
//


#if !defined(_DIGITALGATE_H)
#define _DIGITALGATE_H

#define GATE_MAXNUMOFTARGETS 50		
#define GATE_MAXNUMOFSOURCES 2

#include "ModelElement.h"
#include "Scheduler.h"

const Time DELTA = 0.000001;		//delta vreme, neophodno za uspesno simuliranje
									//bez njega postojali bi istovremeni dogadjaji

//predstavlja digitalno kolo
//iz ove klase izvesce se sve vrste digitalnih kola - and, or...
class DigitalGate : public ModelElement
{
public:

	virtual ~DigitalGate();

	virtual void notify(Description);			//redefinicija	

	void acceptSignal();			//redefinicija					

	void setTarget(ModelElement*);		//redefinicja
	void setSource(ModelElement*);		//redefinicja

	SignalValue getOutPinVal();			//citanje vrednosti na izl. pinu
	SignalValue getOutPinValDemo();			//citanje demo vrednosti na izl. pinu (ovo nije prava vrednost izlza)
	void setOutPinValDemo(SignalValue);			//postavljanje vrednost demo izlaza
	SignalValue getInPinVal(unsigned int);		//dohvatanje vrednosti signala na ulazima kola
	void setInPinVal(unsigned int, SignalValue);		//postavljanje vrednosti signala na ulazima kola

	ModelElement* target[GATE_MAXNUMOFTARGETS];			//skup kola koja su prikacena na izlaz ovog kola (mete)
	ModelElement* source[GATE_MAXNUMOFSOURCES];			//skup kola koja predstavljaju izvor signala za ovo (trenuto) kolo

	Time getDelay0to1();			//redefinicija metoda za dohvatanje kasnjenja
	Time getDelay1to0();

	unsigned int getNumOfTargets();			//dohvatanje broja meta
					
protected:

	DigitalGate(Time, Time);			//konstruktor, prima kasnjenja pri promeni sa 0na1 i sa 1na0

	virtual void process() = 0;			//definise logiku kola (nacin na koji kolo menja izl. signal)
										//treba redefinisati u specificnim kolima - and, or...

	virtual void readInputPins();		//pomocna metoda, cita ulazne pinove kola	
	virtual bool inputsShortened();		//pomocna metoda, utvrdjuje da li su ulazi kratkospojeni (bitno kod stvaranja Event-a)

private:	
	
	unsigned int numOfTargets;

	Time delay0to1;			//kasnjenja pri propagaciji signala kroz gejt
	Time delay1to0;
	
	SignalValue outPinValDemo;		//demo vrednost izlaznog pina. Potrebna za proracun pojave gliceva na izlazu kola
									//ako nema gliceva demo vrednost ce postati prava vrednost, a ako ima nece (stara vrednost ostaje)

	SignalValue outPinVal;			//stvarna vrednost izlaza kola
	SignalValue inPinVal[GATE_MAXNUMOFSOURCES];		//vrednosti na ulaznim pinovima

};

#endif  //_DIGITALGATE_H
