//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Digital Circuit Analyzer
//  @ File Name : DigitalSource.h
//  @ Date : 7.4.2013
//  @ Author : Lazar Kovacevic
//
//


#if !defined(_DIGITALSOURCE_H)
#define _DIGITALSOURCE_H
#define SOURCE_MAXNUMOFTARGETS 100

#include "ModelElement.h"
#include "DigitalGate.h"

//predstavlja digitalni izvor
//iz ove klase bice izvedene sve vrste izvora - izvor signala takta, impulsni izvor...
class DigitalSource : public ModelElement
{
public:

	virtual ~DigitalSource();

	virtual void acceptSignal();			//ne radi nista. Izvor ne prihvata signale, on ih generise
	
	void setTarget(ModelElement* t);		//redefinicija
	void setSource(ModelElement* t);		//redefinicija. Ne radi nista. Izvor nema ulazne pinove

	Time getDelay0to1();			//redefinicija
	Time getDelay1to0();			//redefinicija
	

	void changeOutPinVal();			//menja vrednost na izlaznom pinu, ako je 0 bice 1 posle izvrsavanja metode i obrnuto
	SignalValue getOutPinVal();		//redefinicija

	unsigned int getNumOfTargets();		//dohvatanje broja meta izvora

	ModelElement* target[SOURCE_MAXNUMOFTARGETS];		//mete izvora (kola kojima izvor salje signal)

		
protected:

	DigitalSource();

	virtual void process();			//pomocna metoda metode notify, obavlja promenu izl. signala i slanje signala ka svim gejtovima	
									//koji su mete izvora

	virtual void turnOn()=0;		//pomocna metoda koja stvara prvi dogadjaj kada se izvor kreira i stavlja ga u Scheduler
									//bice redefinisana za svaku vrstu izvora.  Potrebno je redefinisati za konkretne realizacije
	
private:	

	unsigned int numberOfTargets;		//broj meta izvora
	SignalValue outPinVal;			//vrednost signala na izl. pinu izvora
	Time delay0to1;
	Time delay1to0;			//kasnjenja
};

#endif  //_DIGITALSOURCE_H
