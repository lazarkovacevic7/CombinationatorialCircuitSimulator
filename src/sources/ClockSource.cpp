//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Digital Circuit Analyzer
//  @ File Name : ClockSource.cpp
//  @ Date : 7.4.2013
//  @ Author : Lazar Kovacevic
//
//

#include "ClockSource.h"

ClockSource::ClockSource(Frequency f) :
		DigitalSource(), frequency(f)
{
	turnOn();
}

Frequency ClockSource::getFrequency()
{
	return frequency;
}

void ClockSource::acceptVisitor(Visitor* v)
{
	v->visitClkSource(this);
}

ClockSource::~ClockSource()
{

}

void ClockSource::notify(Description descr)
{
	process();
	Time t = 1.0 / (2 * frequency) * 1000000
			+ Scheduler::Instance()->getCurTime();

	if (descr == FallingEdge)
		Event::create(this, t, ModelElement::getId(), RisingEdge);
	else
		Event::create(this, t, ModelElement::getId(), FallingEdge);
}

void ClockSource::turnOn()
{
	changeOutPinVal();
	Time t = 0;
	Event::create(this, t, ModelElement::getId(), FallingEdge);
}
