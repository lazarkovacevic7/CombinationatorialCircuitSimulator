//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Digital Circuit Analyzer
//  @ File Name : Data.cpp
//  @ Date : 7.4.2013
//  @ Author : Lazar Kovacevic
//
//

#include "Data.h"

Data::Data() :
		simulationTime(0), numberOfElements(0), timeOfFirstEvent(-1)
{

}

vector<Element*> Data::getElements()
{
	return elements;
}

void Data::addElement(Element* e)
{
	elements.push_back(e);
}

unsigned int Data::getNumberOfElements()
{
	return numberOfElements;
}

void Data::setNumberOfElements(unsigned int num)
{
	numberOfElements = num;
}

void Data::setSimTime(Time t)
{
	simulationTime = t;
}

Time Data::getSimTime()
{
	return simulationTime;
}

void Data::deleteElement(unsigned int i)			// ?
{
	elements.erase(elements.begin() + i);
}

void Data::addConnDescr(ConnectionDescription* cd)
{
	connDescr.push_back(cd);
}

vector<ConnectionDescription*> Data::getConnDescr()
{
	return connDescr;
}

Time Data::getTOFE()
{
	return timeOfFirstEvent;
}

string Data::getFileName()
{
	return name;
}

void Data::setFileName(char* n)
{
	name = string(n);
}

void Data::setOutPath(char* path)
{
	if (path == 0)
		outPath = "\0";
	else
		outPath = string(path);
}

string Data::getOutPath()
{
	return outPath;
}

Data::~Data()
{
	for (unsigned int i = 0; i < elements.size(); i++)
		delete elements[i];

	for (unsigned int i = 0; i < connDescr.size(); i++)
		delete connDescr[i];
}

void Data::setTOFE(Time t)
{
	if (timeOfFirstEvent == -1)
		timeOfFirstEvent = t;
	else
	{
		if (t < timeOfFirstEvent)
			timeOfFirstEvent = t;
	}
}
